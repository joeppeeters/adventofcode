# Day 5: Print Queue

```elixir
Mix.install([:kino])
```

## Section

```elixir
input = Kino.Input.textarea("Input", monospace: true)
```

```elixir
{instructions, updates} =
  input
  |> Kino.Input.read()
  |> String.split("\n\n")
  |> then(fn [instructions, updates] ->
    {
      instructions
      |> String.split(["\n", "|"])
      |> Enum.map(&String.to_integer/1)
      |> Enum.chunk_every(2)
      |> Enum.group_by(&List.first/1, &Enum.at(&1, 1)),
      updates
      |> String.split()
      |> Enum.map(fn update ->
        update
        |> String.split(",")
        |> Enum.map(&String.to_integer/1)
      end)
    }
  end)
```

```elixir
Enum.reduce(updates, {0, 0}, fn update, {sorted, unsorted} ->
  case Enum.sort(update, &(&1 not in Map.get(instructions, &2, []))) do
    ^update ->
      {sorted + Enum.at(update, div(length(update), 2)), unsorted}

    update ->
      {sorted, unsorted + Enum.at(update, div(length(update), 2))}
  end
end)
```
