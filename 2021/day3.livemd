# Day 3: Binary Diagnostic

## Setup

<!-- livebook:{"livebook_object":"cell_input","name":"input","type":"textarea","value":"111100101100\n101100110001\n100110100101\n001101100010\n010111011110\n000111001100\n001000011010\n110111000100\n101011101011\n111100111010\n111101011001\n011000010010\n101011001000\n010011001001\n110001001100\n001010010010\n010111001010\n000000001001\n001001010001\n011100010111\n001110111100\n001110010010\n000101100100\n010101110001\n110100100011\n100001001001\n001011101011\n010010001100\n011001011011\n001111000011\n000000110110\n110011101010\n100110110010\n100000111101\n100000001110\n010101001110\n010111101101\n110001001110\n100100111100\n000001110001\n101100011101\n100010000001\n110010110100\n000010110011\n101010111011\n011000000110\n010000100111\n111011011101\n111100000010\n011010111011\n010101011100\n100011110001\n110011010100\n010101100000\n101101110011\n000011000100\n111000000110\n101110111001\n100111111011\n110011100101\n101010000111\n000011111010\n000001100100\n111000101110\n101001011110\n100101101001\n110100001100\n001010001000\n110110101000\n100101110100\n101000001011\n011111101100\n000110011100\n001001010101\n101000110010\n111101011101\n110010010000\n001100110110\n001111011111\n010001111110\n001110010111\n100101000101\n010100111010\n100011001000\n010110011001\n001001111010\n101101001001\n111010101101\n101001110001\n001001001110\n100100101110\n110111110100\n110100011000\n011001010010\n010111001100\n000100110000\n110001000100\n111010011011\n011111011101\n011110111100\n001101111010\n100010011101\n111000110111\n110110001010\n110000101010\n001101000011\n011010011101\n111100100010\n001001110110\n001001001011\n010010110100\n010101010110\n101000001110\n011011010100\n010000011010\n010001011110\n111100110011\n111000100111\n100001010000\n010101001111\n101110010110\n110100001000\n000001110110\n000100001110\n000010100111\n010010101001\n110110011000\n111001110100\n001100011001\n110100001010\n110101001010\n111011000001\n100110111000\n011110111110\n101010111010\n100001010111\n010101010101\n010001110001\n110010000010\n000101001111\n111010100010\n100111011110\n000010111110\n011011010011\n101010110100\n100000010111\n100110111110\n010011010001\n000011101011\n111011010011\n100001110111\n000100001000\n010110100000\n001110100000\n010010100110\n000110111110\n110111100100\n001111011010\n101011010010\n010111010100\n011011000110\n101011111110\n001111100011\n101101100001\n010111100110\n010110000001\n110011011110\n110111001011\n110100101001\n010011011101\n110011010010\n100111001100\n010010101010\n010111110000\n010111000010\n001101111101\n011010110011\n001001100000\n100001101100\n011111000111\n111011110100\n100101010001\n101001111001\n001000101110\n010011100100\n111100011001\n111010111110\n111001010001\n110000001001\n110110000010\n000100100011\n010101111111\n100101001110\n100111111010\n000111111010\n010101111101\n010010100010\n101110100101\n100001000001\n000010001000\n110100110001\n110111100010\n100110010011\n101110011111\n111101110010\n001000001001\n010100101100\n100101110111\n010001100111\n010001010010\n100010100100\n001000000001\n011011110000\n010100011000\n110010101000\n100010001110\n000110001000\n101101010001\n001111010000\n111110111111\n100100110000\n000110010011\n001010101000\n011010011010\n111011110010\n001010011100\n111010100101\n011101111100\n010011000001\n001111101000\n111110010010\n100011100100\n010011010000\n011111000000\n110001010011\n101011001110\n101001111101\n000110001101\n010001000010\n011000000010\n011000100001\n011111011000\n111000001101\n011010001101\n000001000100\n101010010010\n111111100111\n010111111111\n001011110011\n100110000100\n000100010100\n010110000000\n110011100000\n010011101111\n110101111100\n000010001010\n101001010011\n010101101111\n111010011010\n001101101010\n001100101010\n100100001001\n101100110111\n000001001100\n011111011001\n110100101100\n110110110010\n011110001001\n100110100011\n010111111100\n110111111101\n010111000011\n101001101011\n010101101100\n011100000001\n001000101100\n110111011011\n001101001100\n111001111001\n010000111100\n010101111100\n000100010010\n100010001101\n110000111100\n110011010101\n111101100000\n001101011001\n010111110111\n010001100000\n101111000100\n101101111101\n001000001111\n101011110000\n111000000101\n101000000101\n111101111011\n101010111101\n101111000000\n010111011001\n011100101101\n100100001000\n101111110010\n000001000001\n000100100000\n100100011010\n011001100101\n011010001011\n010001111000\n001110101001\n100111001001\n000111001011\n100101110011\n111010000001\n010000011001\n101110001110\n111011110111\n110010011101\n100011001010\n001001100101\n011101001000\n100100001100\n000111111000\n101100011011\n111101010011\n111100010101\n101111100111\n011011100110\n101010110110\n111001000100\n011101000010\n101100101110\n100011001110\n001100000001\n101001001101\n001100101110\n111111010000\n001110001110\n000011110111\n100001000101\n011110001011\n001100101111\n100100110111\n110100010101\n011100110001\n101101111010\n111010011000\n101000100110\n100100001110\n111000011011\n100001001110\n111001000010\n100110100111\n011111101011\n101001110011\n010000000100\n111011111000\n011101110000\n110111110110\n000000100110\n001100110010\n101010110101\n000010101110\n000011011011\n101111011101\n000101011110\n101010000110\n010010111011\n000111010001\n011001011000\n111111010010\n110000101110\n001111101100\n001001001111\n001011010001\n010110110010\n101101100010\n111100110101\n101101001000\n110110000111\n101010011001\n011000100100\n010010011010\n100000100010\n111000110100\n011100000101\n010010110011\n000011001000\n101001100101\n010100111000\n101111111101\n011110101001\n100011110110\n101111001100\n100110111011\n110000000011\n100011010101\n101010001110\n010011000010\n000011000110\n010101110110\n001111101001\n101000001001\n110011110000\n000001001101\n000010110100\n001111101101\n010110000100\n010010001001\n111010110010\n110011111111\n111000000000\n101010110000\n010110100010\n100000000000\n010110010000\n110111001001\n010101011011\n001110011001\n011101111000\n110011011101\n100000110110\n100110011001\n001111100100\n010100110110\n000110111101\n111010101011\n101001100010\n011011010010\n000010010011\n101000011101\n101110010101\n000000110011\n100111111001\n011000011001\n000000000001\n101011110110\n111111011110\n010010111000\n010110100100\n101100100000\n000010111000\n111110010011\n010110110011\n111111110001\n011011100101\n110110101101\n001011110100\n110001111111\n101010010111\n000110011011\n001000011110\n101101101000\n111111010111\n101010111001\n010100000001\n101100101001\n000111110101\n101011111000\n100110011011\n010000000111\n100111011001\n110111010101\n011110011010\n001011011010\n111101100100\n011001101101\n100001111100\n000011011000\n100011011001\n101100011110\n011111011111\n001001010010\n110101110110\n000111000010\n000110001001\n111010110000\n001100101001\n110011101000\n101011110100\n110000001010\n011110111010\n101101101010\n110011101011\n011011010000\n110111101100\n100000001011\n001110110111\n000000100100\n111110011001\n001110011010\n011101101110\n100011110011\n101110101011\n001010101011\n010111011011\n100110110111\n100000101110\n010011100111\n000010011100\n011111011100\n011000111001\n111011101001\n000110110110\n100011100110\n101101110100\n101111000111\n111110110010\n000010010101\n111110100111\n110001011110\n110101110000\n100110101000\n011000111010\n011111110011\n010010010000\n001000110100\n100010100111\n100101100010\n011000100101\n000101111001\n101100001111\n110111000010\n010100011110\n000101100000\n101111011000\n000010100011\n000010000100\n010011001011\n100010110100\n000000101001\n000010110111\n110000100111\n010001101111\n010111000110\n110011011111\n010100010011\n011110001000\n001001101000\n111000110000\n011001111110\n101001011100\n101110000111\n111110010100\n001101011110\n010010111111\n011110000011\n011001110010\n001011110111\n000000001110\n111000011101\n110111101001\n111111001100\n100111010011\n111111101010\n110111111000\n001101100111\n111011011111\n000010111101\n100010011001\n010110100101\n011011001010\n000001101000\n001011110110\n000001111000\n100011001111\n110000100011\n100001010010\n110110000100\n110110010010\n101001101111\n111100000011\n110000111001\n100001011010\n110110011101\n101010001011\n010110011100\n111000101010\n001111111011\n010101101001\n100010111011\n100101010111\n011111100001\n001100100000\n111101101000\n000110000010\n010111100000\n001000110110\n100011101110\n010101011000\n110000000111\n100011100001\n100001100000\n000111010100\n110101011001\n101111100110\n011111101111\n000110000011\n000000100001\n001010000101\n111100100001\n111000010101\n011011011110\n101001001100\n100010110110\n100001101001\n101100001100\n100111000010\n011001000110\n011110110101\n000000100011\n011100000111\n101110111100\n010000010010\n110111110010\n100101001001\n010001010011\n000011100100\n000100100101\n010100010001\n100111101101\n101110000101\n110100101111\n001111101011\n010011101010\n110000110001\n000101101011\n111010001001\n011111010110\n001001111000\n111110110011\n111010011100\n010011011110\n100001010100\n010111010011\n011110001110\n111010100011\n110001000010\n100000100100\n001001101011\n001011111011\n110000010010\n000011001101\n001101001011\n011110010011\n100001110011\n011101100000\n110101001110\n001000111101\n001101110011\n001100101101\n011110001010\n111111011000\n101001101101\n110011010111\n101110001101\n111001101110\n011010011000\n101010101000\n010110000010\n100000110001\n011001000011\n011100010010\n010001001111\n001011000100\n101000101011\n111101010000\n100111100101\n001011101110\n010001000011\n111101000111\n110010011111\n011011001101\n010110101110\n100011100111\n101111111111\n111011011010\n000100111100\n000111011011\n101010001010\n111110000011\n101110011010\n011100001001\n100000011110\n011000100000\n011001010101\n001110110010\n101110101010\n010111110101\n101110101110\n101111010001\n101101001101\n001010101100\n011011001011\n011001110111\n111101100101\n101011100100\n011111111101\n110000111010\n010010011000\n011010110010\n010001000001\n100111101100\n011001111000\n101011010111\n001111100110\n111100001111\n001101010000\n000011001110\n110010011110\n111010100111\n110101001000\n001000100110\n101001011000\n010010101111\n011000001011\n000110001011\n000010000011\n001001111001\n011000111111\n101000010011\n111010011101\n101111101000\n111100010001\n111011000100\n100111100010\n111000011010\n010010000010\n111110110100\n010010111010\n110001010001\n101110111101\n010000001000\n000011111100\n111001001000\n101011001001\n111011011001\n010100001101\n010001001100\n010011001010\n000101010100\n010100001100\n001000011001\n100110101110\n011001111011\n010101100011\n111100000100\n100100101000\n110010001010\n000100101001\n000101100001\n000010011000\n101001111000\n001001000100\n011001001000\n010110010011\n100001010110\n010010010010\n010001011010\n101100111110\n101001010000\n110101110001\n100111001111\n010110110101\n101011010100\n011110011111\n010000010100\n111011000110\n011111001110\n010110111001\n000100010101\n100110001101\n001001001010\n000010010000\n010001111001\n001011011000\n010101011110\n110101101001\n111101011100\n010011110001\n101000110001\n111110110111\n001110001010\n101110111111\n000111011101\n010001110010\n101010010101\n001000011111\n010000010001\n101100010000\n110111101011\n001001011110\n100011011101\n110010100110\n111101111100\n111100011100\n000111110000\n000101010101\n011001011101\n000101110111\n001100011111\n110010011000\n010110111111\n111101000010\n111011010000\n111001110010\n010111000100\n111111100001\n000000010000\n001100001111\n101101111111\n101100000001\n011001100000\n100010110010\n111111111110\n000110010001\n001001111110\n111110111011\n110101001111\n010000000010\n000001101110\n100001011110\n111111100101\n101100100011\n100000010110\n100011000110\n000010010001\n100010111010\n111010111000\n011110110010\n000011000010\n010010011001\n010010000100\n110101111000\n010000001010\n100000011010\n001010001110\n000011010001\n100100111101\n111011111001\n010001010111\n010000100000\n000100101000\n101011011011\n111111010110\n111110000100\n100011101010\n100111011010\n010101001100\n011010000000\n111100100000\n011010111110\n011111001010\n111011011000\n001011001010\n111101101111\n100111100110\n011000000000\n000001011000\n100111011000\n001111100000\n000010101100\n110111001010\n011010100101\n001010010000\n110110011100\n010101110111\n111111110110\n011100110101\n101000010110\n100110110110\n101001101100\n111001011001\n000001010011\n000110100000\n111101101011\n101111101101\n100010111110\n010110011111\n000010000111\n000101101010\n011100000000\n001110011101\n011011110110\n111111101001\n111111010011\n110000110100\n100000010101\n001010000010\n111010101110\n001110010000\n100100010101\n100110001000\n111100011000\n001011100111\n100100110011\n001000001100\n000111001000\n100111111101\n100110010101\n101000001101\n111110001110\n001011100000\n000011111101\n010010001101\n000010011101\n001100111110\n000001100110\n110001101010\n001101010010\n110000110000\n100011001100\n001110011011\n110001110000\n010000011110\n100011111110\n101001101000\n001111011011\n010001011011\n111111010100\n001011001111\n001100010110\n001010111001\n110101010001\n001001111011\n010110001000\n110100101110\n100100100010\n010001101101\n100100000110\n110010110010\n011111000010\n000110010010\n001111110001\n110111101110\n111111000111\n011011011111\n011010101001\n011001011110\n010100110000\n010000101110\n101110100111\n100001010101\n101101010100\n000111101010\n111010000100\n100000110111\n001101110110\n011011100010\n010100111001\n000110100010\n110111101111\n100111000110\n101100110011\n010001000111\n110000101001\n100101011100\n001011111000\n100001110001\n010000011011\n001010111100\n000101101111\n011011111001\n110110101111\n100101011000\n011000110110\n100000011111\n110011100011\n010111001001\n000101010111\n000010100110\n101010110010\n000000001100\n111110001001\n011111011010\n011000111101\n110110001000\n110011001010\n100101101111\n100111101111\n100101100111\n110001001010\n010110110001\n001101101000\n101110001111\n000001001110\n010101110100\n001101011111\n100010100000\n101000011000\n010100100111\n110011100100\n110111110101\n000110001111\n000001011101\n001011101100\n111110000110\n100001010011\n000100000100\n001010011011\n110000110111"} -->

```elixir
defmodule Setup do
  def get_input(prompt) do
    case IO.gets(prompt) do
      :eof -> ""
      line -> line <> get_input(prompt)
    end
  end

  def parse_input(report) do
    report
    |> String.split("\n", trim: true)
    |> Enum.map(&String.codepoints/1)
  end
end

input = Setup.get_input("input") |> Setup.parse_input()

:ok
```

```elixir
defmodule Diagnostics do
  def transpose(matrix) do
    matrix
    |> Enum.zip()
    |> Enum.map(&Tuple.to_list/1)
  end

  def most_common_bits(readings) do
    readings
    |> transpose()
    |> Enum.map(&Enum.frequencies/1)
    |> Enum.map(fn
      %{"0" => zeros, "1" => ones} when ones >= zeros -> "1"
      _ -> "0"
    end)
  end

  def flip(bits) do
    Enum.map(bits, fn
      "1" -> "0"
      "0" -> "1"
    end)
  end

  def gamma(most_common_bits) do
    most_common_bits
    |> Enum.join()
    |> String.to_integer(2)
  end

  def epsilon(most_common_bits) do
    most_common_bits
    |> flip()
    |> Enum.join()
    |> String.to_integer(2)
  end

  def power_consumption(readings) do
    mcb = most_common_bits(readings)

    gamma(mcb) * epsilon(mcb)
  end

  def oxygen_rating(readings) do
    rating(readings, &Kernel.==/2)
  end

  def co2_rating(readings) do
    rating(readings, &Kernel.!=/2)
  end

  defp rating(readings, fun) do
    size = readings |> List.first() |> Enum.count()

    Enum.reduce_while(0..(size - 1), readings, fn
      _, [reading] ->
        {:halt, [reading]}

      index, readings ->
        most_common_bit = most_common_bits(readings) |> Enum.at(index)

        {:cont, Enum.filter(readings, &fun.(Enum.at(&1, index), most_common_bit))}
    end)
    |> List.first()
    |> Enum.join()
    |> String.to_integer(2)
  end

  def life_support_rating(readings) do
    oxygen_rating(readings) * co2_rating(readings)
  end
end
```

## Part1

```elixir
Diagnostics.power_consumption(input)
```

## Part2

```elixir
Diagnostics.life_support_rating(input)
```

## Tetst

<!-- livebook:{"reevaluate_automatically":true} -->

```elixir
ExUnit.start()

defmodule Test do
  use ExUnit.Case

  setup do
    {:ok,
     input:
       Setup.parse_input("""
       00100
       11110
       10110
       10111
       10101
       01111
       00111
       11100
       10000
       11001
       00010
       01010
       """)}
  end

  test "parse input", %{input: input} do
    assert input == [
             ["0", "0", "1", "0", "0"],
             ["1", "1", "1", "1", "0"],
             ["1", "0", "1", "1", "0"],
             ["1", "0", "1", "1", "1"],
             ["1", "0", "1", "0", "1"],
             ["0", "1", "1", "1", "1"],
             ["0", "0", "1", "1", "1"],
             ["1", "1", "1", "0", "0"],
             ["1", "0", "0", "0", "0"],
             ["1", "1", "0", "0", "1"],
             ["0", "0", "0", "1", "0"],
             ["0", "1", "0", "1", "0"]
           ]
  end

  test "diagnostics", %{input: input} do
    mcb = Diagnostics.most_common_bits(input)

    assert Diagnostics.gamma(mcb) == 22
    assert Diagnostics.epsilon(mcb) == 9

    assert Diagnostics.power_consumption(input) == 198
  end

  test "life support rating", %{input: input} do
    assert Diagnostics.oxygen_rating(input) == 23
    assert Diagnostics.co2_rating(input) == 10

    assert Diagnostics.life_support_rating(input) == 230
  end
end

ExUnit.run()
```
