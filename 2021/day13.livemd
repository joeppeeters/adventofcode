# --- Day 13: Transparent Origami ---

## Setup

<!-- livebook:{"livebook_object":"cell_input","name":"input","type":"textarea","value":"60,140\n1044,50\n878,203\n641,606\n669,606\n947,686\n370,534\n251,703\n1215,432\n1280,542\n1263,481\n701,703\n47,257\n1173,820\n1082,387\n1220,217\n152,796\n624,799\n522,147\n951,584\n1255,144\n1179,534\n224,296\n488,527\n99,838\n189,857\n440,766\n1148,302\n492,190\n82,530\n1019,514\n75,707\n1084,589\n710,429\n1123,666\n1192,810\n755,56\n791,866\n788,876\n363,42\n1290,429\n676,17\n208,362\n976,492\n1290,744\n237,705\n961,831\n137,596\n1218,312\n228,3\n795,4\n1275,798\n1098,93\n649,234\n266,844\n410,187\n291,852\n597,598\n212,801\n131,360\n1260,607\n1069,184\n438,198\n763,210\n1272,529\n55,592\n751,822\n383,358\n228,611\n746,217\n219,358\n713,282\n556,443\n957,78\n363,14\n1203,28\n542,409\n787,422\n788,147\n845,526\n109,826\n90,677\n1091,358\n90,217\n382,40\n764,518\n944,618\n835,819\n156,672\n653,289\n1253,737\n912,236\n75,365\n320,784\n284,729\n649,794\n167,341\n408,635\n835,75\n599,21\n92,358\n557,113\n62,417\n597,150\n1099,257\n610,586\n393,522\n1203,600\n875,403\n35,686\n1275,422\n1141,872\n184,362\n730,390\n726,809\n234,689\n87,259\n1223,22\n100,346\n992,236\n1064,584\n947,42\n182,178\n1215,74\n316,368\n95,462\n1203,236\n1034,261\n547,600\n181,320\n1212,611\n1171,628\n1150,284\n982,669\n1266,756\n694,305\n803,724\n445,551\n1173,688\n1173,686\n542,428\n537,750\n567,299\n676,196\n594,476\n539,413\n989,800\n773,103\n195,472\n887,24\n1014,411\n72,236\n1103,250\n195,422\n16,82\n395,696\n812,217\n392,731\n925,494\n980,79\n537,103\n219,403\n1154,670\n1250,306\n927,536\n832,131\n1228,513\n609,191\n937,78\n612,646\n264,809\n1190,197\n57,109\n701,191\n1082,3\n416,266\n940,534\n3,117\n1237,593\n437,686\n933,808\n408,859\n1039,536\n788,828\n681,126\n55,693\n1073,441\n795,101\n1131,170\n1256,854\n179,75\n330,815\n131,870\n64,443\n510,828\n1111,96\n895,807\n1016,857\n199,239\n1240,210\n710,465\n873,686\n765,675\n1253,785\n1163,147\n1014,595\n443,861\n1196,353\n719,121\n194,707\n306,660\n348,822\n624,859\n1190,151\n559,500\n1012,421\n756,548\n600,465\n53,798\n1212,731\n442,9\n30,156\n1231,502\n1171,345\n1102,362\n276,358\n786,373\n272,40\n448,295\n154,124\n1297,493\n306,698\n269,176\n1089,292\n791,28\n584,460\n1014,483\n179,724\n495,501\n947,852\n420,660\n1218,358\n75,463\n850,633\n663,254\n602,696\n887,276\n32,37\n358,231\n619,514\n115,481\n1071,87\n1215,522\n137,52\n547,206\n547,210\n579,871\n1203,654\n1126,851\n1266,138\n1183,696\n768,18\n997,717\n536,829\n373,302\n986,392\n199,605\n137,368\n373,592\n1156,124\n890,533\n803,500\n211,257\n648,850\n1004,38\n522,66\n269,381\n1072,714\n1250,588\n902,259\n803,595\n735,502\n1215,822\n333,94\n118,810\n1203,866\n711,715\n423,618\n656,858\n154,546\n577,617\n1310,858\n1223,747\n1150,232\n999,842\n30,409\n435,627\n818,750\n997,24\n241,262\n587,618\n75,879\n597,282\n925,16\n79,392\n644,93\n79,54\n360,37\n656,652\n1248,477\n48,312\n470,250\n848,366\n1146,876\n1054,877\n115,413\n455,15\n1092,373\n376,39\n982,225\n875,267\n492,893\n731,707\n162,704\n508,812\n641,292\n251,191\n328,669\n192,752\n808,212\n182,268\n485,882\n455,798\n231,170\n559,72\n855,798\n546,518\n179,453\n402,166\n979,789\n1158,796\n495,841\n42,565\n1019,42\n1116,822\n1074,434\n604,485\n599,715\n579,891\n475,371\n647,786\n1297,736\n398,809\n1064,785\n798,868\n1158,462\n716,844\n440,128\n1079,432\n616,305\n546,297\n160,610\n850,261\n417,441\n199,646\n221,292\n555,345\n803,394\n54,40\n55,302\n811,196\n810,348\n1098,765\n870,576\n1168,610\n1186,198\n557,186\n969,870\n1231,726\n1193,567\n1235,15\n962,682\n495,5\n483,868\n118,65\n1049,522\n13,288\n50,607\n1302,658\n1096,766\n147,441\n298,197\n152,656\n366,618\n907,324\n547,152\n850,185\n408,259\n98,3\n348,212\n711,179\n1192,829\n1218,582\n1125,63\n1255,302\n470,436\n187,676\n1039,201\n764,737\n480,436\n167,497\n793,746\n139,628\n723,46\n927,302\n773,343\n517,746\n264,85\n920,253\n237,413\n880,744\n1076,358\n600,37\n634,474\n132,847\n398,85\n147,453\n1245,113\n184,868\n1310,312\n944,365\n947,462\n529,233\n144,66\n169,458\n376,407\n659,565\n928,406\n928,488\n378,234\n167,273\n619,96\n127,463\n616,589\n875,491\n1016,373\n234,88\n288,141\n154,796\n492,592\n206,295\n189,37\n120,487\n851,192\n1158,210\n1136,458\n465,609\n64,451\n338,882\n426,3\n599,742\n1116,707\n326,225\n1310,36\n827,644\n877,740\n823,341\n701,367\n591,121\n107,206\n127,737\n1297,323\n1154,672\n226,137\n862,422\n1039,21\n199,248\n666,93\n788,187\n808,236\n980,815\n452,618\n634,420\n75,187\n540,353\n508,364\n1213,840\n13,401\n934,487\n442,801\n1144,647\n20,429\n830,10\n962,822\n527,96\n1064,635\n927,469\n1278,93\n763,476\n162,381\n884,387\n843,101\n666,98\n1163,441\n1253,598\n1111,289\n137,688\n507,724\n628,93\n893,441\n669,323\n937,592\n348,38\n1305,772\n382,37\n335,674\n781,233\n316,436\n763,152\n98,731\n1255,750\n1012,697\n112,474\n850,374\n194,72\n30,738\n60,306\n912,85\n152,210\n950,521\n408,707\n554,361\n1185,233\n50,633\n1084,305\n401,817\n485,22\n360,521\n1236,504\n753,759\n787,702\n577,169\n415,807\n1039,469\n1257,798\n313,870\n786,521\n67,724\n349,831\n830,458\n1176,473\n843,666\n917,522\n540,317\n554,346\n189,78\n589,217\n124,170\n873,667\n494,284\n60,418\n875,851\n691,870\n1299,89\n950,821\n524,521\n1228,364\n641,323\n1198,585\n915,500\n765,826\n65,217\n770,353\n1268,565\n30,95\n199,319\n969,269\n60,476\n649,772\n798,610\n845,609\n676,474\n1215,72\n900,707\n1031,481\n985,829\n1081,113\n559,432\n1041,612\n1168,436\n1091,627\n259,842\n644,25\n48,821\n276,234\n822,247\n170,222\n462,80\n60,364\n763,236\n475,523\n435,267\n663,786\n984,225\n49,86\n564,574\n512,610\n295,310\n470,644\n226,753\n981,381\n825,12\n868,885\n850,66\n114,200\n1034,660\n1034,536\n1084,757\n356,645\n134,697\n663,168\n1280,794\n154,616\n219,43\n669,602\n882,305\n912,877\n902,707\n80,147\n333,22\n475,724\n114,423\n179,441\n353,816\n373,78\n1126,362\n378,633\n1091,267\n127,605\n1004,698\n1115,422\n152,124\n152,238\n840,436\n37,596\n209,103\n574,859\n1038,406\n423,870\n329,829\n835,5\n947,880\n599,40\n546,597\n704,373\n107,654\n325,829\n1143,497\n1231,392\n783,463\n132,299\n199,289\n199,575\n604,760\n1196,200\n882,589\n599,179\n355,555\n803,170\n1190,487\n296,540\n622,373\n0,134\n494,732\n599,88\n1039,267\n580,504\n1118,142\n1076,458\n1225,122\n698,248\n171,26\n748,361\n1054,448\n1009,302\n1091,806\n868,801\n816,732\n816,367\n634,17\n873,227\n711,854\n1131,75\n488,303\n1173,526\n405,49\n565,33\n156,782\n401,705\n169,882\n977,648\n1215,462\n515,852\n716,50\n1310,582\n1146,18\n1220,798\n256,448\n1173,746\n328,225\n5,682\n810,546\n518,37\n825,22\n73,593\n928,40\n48,582\n1001,196\n1143,341\n1262,760\n1235,707\n1044,844\n835,276\n319,474\n1136,686\n893,840\n601,798\n1144,695\n256,85\n502,236\n1179,360\n319,226\n1230,411\n830,436\n909,705\n972,78\n875,627\n507,500\n490,876\n95,432\n430,296\n284,117\n741,772\n815,393\n1255,693\n713,765\n152,18\n771,413\n1163,394\n62,346\n783,157\n862,295\n127,289\n902,310\n950,73\n940,86\n751,598\n1014,354\n1166,66\n770,149\n1014,299\n160,284\n1307,777\n602,24\n437,667\n403,324\n237,481\n1019,380\n1039,592\n597,737\n383,21\n612,777\n994,353\n420,434\n1303,786\n475,819\n1096,16\n320,492\n1215,820\n1148,381\n1173,74\n50,756\n3,777\n649,212\n291,490\n273,292\n195,254\n55,806\n1227,726\n626,421\n75,529\n0,652\n502,682\n1029,367\n470,868\n1101,103\n835,371\n97,840\n686,95\n98,611\n1026,729\n517,368\n172,124\n545,219\n238,266\n572,866\n1278,37\n731,871\n1255,152\n35,422\n1101,343\n691,798\n1091,536\n763,742\n57,737\n738,866\n1084,753\n120,645\n1175,866\n783,96\n1243,618\n972,423\n6,558\n604,16\n887,618\n214,128\n1253,150\n1026,777\n234,458\n793,526\n1088,203\n117,327\n1218,88\n27,675\n994,126\n1054,533\n492,302\n1290,598\n562,689\n137,746\n1158,434\n1290,868\n1126,868\n62,253\n244,707\n88,833\n324,79\n1034,633\n1091,403\n335,726\n694,589\n420,436\n1129,320\n1268,613\n1111,319\n268,691\n108,821\n591,773\n547,294\n502,212\n530,276\n72,889\n1300,796\n808,434\n435,206\n1220,677\n326,673\n1201,675\n1086,296\n962,196\n1256,653\n16,812\n845,543\n11,89\n701,815\n166,695\n1222,490\n730,504\n319,420\n502,695\n174,10\n38,529\n1246,443\n644,210\n783,320\n798,162\n353,509\n793,368\n1150,214\n95,208\n984,381\n1300,93\n390,473\n594,844\n935,481\n494,527\n920,473\n1300,126\n303,176\n348,408\n284,777\n609,703\n929,292\n1198,757\n990,558\n1123,676\n607,376\n1230,35\n1029,302\n13,323\n1059,703\n669,571\n1190,743\n686,156\n498,728\n721,677\n1029,527\n986,502\n1294,812\n606,582\n1235,529\n\nfold along x=655\nfold along y=447\nfold along x=327\nfold along y=223\nfold along x=163\nfold along y=111\nfold along x=81\nfold along y=55\nfold along x=40\nfold along y=27\nfold along y=13\nfold along y=6"} -->

```elixir
defmodule Setup do
  def get_input(prompt) do
    case IO.gets(prompt) do
      :eof -> ""
      line -> line <> get_input(prompt)
    end
  end

  def parse(binary) do
    [dots, folds] = binary |> String.split("\n\n")

    {parse_dots(dots), parse_folds(folds)}
  end

  defp parse_dots(binary) do
    binary
    |> String.split([",", "\n"], trim: true)
    |> Enum.chunk_every(2)
    |> MapSet.new(fn [x, y] ->
      {String.to_integer(x), String.to_integer(y)}
    end)
  end

  defp parse_folds(binary) do
    binary
    |> String.split("\n", trim: true)
    |> Enum.map(&parse_fold/1)
  end

  defp parse_fold("fold along x=" <> x), do: {:x, String.to_integer(x)}
  defp parse_fold("fold along y=" <> y), do: {:y, String.to_integer(y)}
end
```

```elixir
defmodule Manual do
  def fold({:y, fold}, dots) do
    for {x, y} <- dots, reduce: MapSet.new() do
      acc ->
        cond do
          y < fold ->
            MapSet.put(acc, {x, y})

          y == fold ->
            acc

          y > fold ->
            MapSet.put(acc, {x, fold - y + fold})
        end
    end
  end

  def fold({:x, fold}, dots) do
    for {x, y} <- dots, reduce: MapSet.new() do
      acc ->
        cond do
          x < fold ->
            MapSet.put(acc, {x, y})

          x == fold ->
            acc

          x > fold ->
            MapSet.put(acc, {fold - x + fold, y})
        end
    end
  end
end
```

## Part1

```elixir
Setup.get_input("input")
|> Setup.parse()
|> then(fn {dots, [fold | _folds]} ->
  Manual.fold(fold, dots)
end)
|> Enum.count()
```

## Part2

```elixir
Setup.get_input("input")
|> Setup.parse()
|> then(fn {dots, folds} ->
  Enum.reduce(folds, dots, &Manual.fold/2)
end)
|> then(fn dots ->
  dots
  |> Enum.unzip()
  |> Tuple.to_list()
  |> Enum.map(&Enum.max/1)
  |> then(fn [max_x, max_y] ->
    Enum.map(0..max_y, fn y ->
      Enum.map(0..max_x, fn x ->
        if {x, y} in dots, do: "#", else: " "
      end)
      |> Enum.join()
    end)
  end)
end)
|> Enum.join("\n")
|> IO.puts()
```
